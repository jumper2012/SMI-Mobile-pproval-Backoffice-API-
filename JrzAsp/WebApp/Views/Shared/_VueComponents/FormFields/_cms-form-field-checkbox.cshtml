@using JrzAsp.Lib.TypeUtilities
@using WebApp.Features.MetronicTheme
@{
    var tplId = $"vue-tpl-{Randomer.Self.Next()}";
}
@using (Html.AtEndPagePluginsScripts()) {
    <script type="text/x-template" id="@tplId">
        <div class="form-group">
            <label v-html="label"></label>
            <div class="input-group">
                <span class="input-group-btn">
                    <button class="btn" :class="checkedButtonClass" type="button" @@click="toggleCheckbox()">
                        <i :class="checkedIconClass"></i>
                    </button>
                </span>
                <input type="text" readonly class="form-control" :value="inputVal ? yesLabel : noLabel" style="cursor: pointer"
                       @@click.prevent="toggleCheckbox()"/>
            </div>
            <span class="help-block" v-html="helpText"></span>
            <span class="help-block text-danger" v-for="(err, idx) in inputErrors" :key="idx">{{ err }}</span>
        </div>
    </script>
    <script type="text/javascript">
        $(function () {
            var ffm = protoCms.mixins.formFieldMixin;
            var comp = {
                name: 'cms-form-field-checkbox',
                template: '#@tplId',
                mixins: [ffm],
                props: ['yesLabel','noLabel'],
                data: function() {
                    return {}
                },
                computed: {
                    inputVal: {
                        get: function() {
                            return this.getFormValue();
                        },
                        set: function(newVal) {
                            this.setFormValue(newVal);
                        }
                    },
                    checkedIconClass: function () {
                        if (this.inputVal) {
                            return 'fa fa-toggle-on';
                        }
                        return 'fa fa-toggle-off';
                    },
                    checkedButtonClass: function () {
                        if (this.inputVal) {
                            return 'btn-primary';
                        }
                        return 'btn-default';
                    }
                },
                methods: {
                    toggleCheckbox:function() {
                        this.inputVal = !this.inputVal;
                    }
                }
            };
            Vue.component(comp.name, comp);
        });
    </script>
}